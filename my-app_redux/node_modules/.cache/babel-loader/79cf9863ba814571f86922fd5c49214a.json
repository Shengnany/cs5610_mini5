{"ast":null,"code":"import { combineReducers } from \"redux\";\n\nconst boxReducer = function () {\n  let boxes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [{\n    on: false,\n    id: 1\n  }, {\n    on: false,\n    id: 2\n  }, {\n    on: false,\n    id: 3\n  }, {\n    on: false,\n    id: 4\n  }];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  return boxes.map(box => {\n    box.on = box.id === action.payload.id ? !box.on : box.on;\n  });\n};\n\nconst cntReducer = function () {\n  let cnt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"ON\") {\n    return cnt - 1;\n  } else return cnt + 1;\n};\n\nexport default combineReducers({\n  boxes: boxReducer,\n  cnt: cntReducer\n});","map":{"version":3,"sources":["/Users/shengnanyou/Desktop/cs5610/my-app_redux/src/reducers/index.js"],"names":["combineReducers","boxReducer","boxes","on","id","action","map","box","payload","cntReducer","cnt","type"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAEA,MAAMC,UAAU,GAAG,YAQd;AAAA,MAPHC,KAOG,uEAPK,CACN;AAAEC,IAAAA,EAAE,EAAE,KAAN;AAAaC,IAAAA,EAAE,EAAE;AAAjB,GADM,EAEN;AAAED,IAAAA,EAAE,EAAE,KAAN;AAAaC,IAAAA,EAAE,EAAE;AAAjB,GAFM,EAGN;AAAED,IAAAA,EAAE,EAAE,KAAN;AAAaC,IAAAA,EAAE,EAAE;AAAjB,GAHM,EAIN;AAAED,IAAAA,EAAE,EAAE,KAAN;AAAaC,IAAAA,EAAE,EAAE;AAAjB,GAJM,CAOL;AAAA,MADHC,MACG;AACH,SAAOH,KAAK,CAACI,GAAN,CAAWC,GAAD,IAAS;AAExBA,IAAAA,GAAG,CAACJ,EAAJ,GAASI,GAAG,CAACH,EAAJ,KAAWC,MAAM,CAACG,OAAP,CAAeJ,EAA1B,GAA+B,CAACG,GAAG,CAACJ,EAApC,GAAyCI,GAAG,CAACJ,EAAtD;AACD,GAHM,CAAP;AAID,CAbD;;AAeA,MAAMM,UAAU,GAAG,YAAqB;AAAA,MAApBC,GAAoB,uEAAd,CAAc;AAAA,MAAXL,MAAW;;AACtC,MAAIA,MAAM,CAACM,IAAP,KAAgB,IAApB,EAA0B;AACxB,WAAOD,GAAG,GAAG,CAAb;AACD,GAFD,MAEO,OAAOA,GAAG,GAAG,CAAb;AACR,CAJD;;AAMA,eAAeV,eAAe,CAAC;AAC7BE,EAAAA,KAAK,EAAED,UADsB;AAE7BS,EAAAA,GAAG,EAAED;AAFwB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\n\nconst boxReducer = (\n  boxes = [\n    { on: false, id: 1 },\n    { on: false, id: 2 },\n    { on: false, id: 3 },\n    { on: false, id: 4 },\n  ],\n  action\n) => {\n  return boxes.map((box) => {\n    \n    box.on = box.id === action.payload.id ? !box.on : box.on;\n  });\n};\n\nconst cntReducer = (cnt = 0, action) => {\n  if (action.type === \"ON\") {\n    return cnt - 1;\n  } else return cnt + 1;\n};\n\nexport default combineReducers({\n  boxes: boxReducer,\n  cnt: cntReducer,\n});\n"]},"metadata":{},"sourceType":"module"}